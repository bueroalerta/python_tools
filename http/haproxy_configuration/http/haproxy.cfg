#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    #mode                    http
    log global
    retries 3
    option redispatch
    timeout connect 5000
    timeout client 50000
    timeout server 50000
    #log                     global
    #option                  httplog
    #option                  dontlognull
    #option http-server-close
    #option forwardfor       except 127.0.0.0/8
    #option                  redispatch
    #retries                 3
    #timeout http-request    10s
    #timeout queue           1m
    #timeout connect         10s
    #timeout client          1m
    #timeout server          1m
    #timeout http-keep-alive 10s
    #timeout check           10s
    #maxconn                 3000

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend  main
    option tcplog
    bind 172.16.88.19:80
    #bind 172.16.88.19:443 ssl crt /etc/ssl/xip.io/xip.io.pem
    mode http
    default_backend             app
    #default_backend f738a3e6-087c-43c9-be38-c84db63149ac
    maxconn 100
    option forwardfor


#frontend  main *:5000
#    acl url_static       path_beg       -i /static /images /javascript /stylesheets
#    acl url_static       path_end       -i .jpg .gif .png .css .js
#
#    use_backend static          if url_static
#    default_backend             app

#---------------------------------------------------------------------
# static backend for serving up images, stylesheets and such
#---------------------------------------------------------------------
backend static
    balance     roundrobin
    server      static 127.0.0.1:4331 check

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
backend app
    mode http
    balance roundrobin
    option forwardfor
    timeout check 10s
    option httpchk GET /zhangwei/test
    http-check expect rstatus 200
    stick-table type ip size 10k
    #stick on src
    server fb493426-8cbc-405f-ba91-4384cd601382 172.16.88.21:80 weight 5 check inter 30s fall 5
    server b8c762bb-b1fc-4012-9063-087f647a2023 172.16.88.22:80 weight 5 check inter 30s fall 5
    #balance     roundrobin
    #server fb493426-8cbc-405f-ba91-4384cd601382 172.16.88.21:80 weight 5 check inter 30s fall 5
    #server b8c762bb-b1fc-4012-9063-087f647a2023 172.16.88.22:80 weight 5 check inter 30s fall 5
    #server  app1 127.0.0.1:5001 check
    #server  app2 127.0.0.1:5002 check
    #server  app3 127.0.0.1:5003 check
    #server  app4 127.0.0.1:5004 check
